class My_singleton:
 
    _instance = None
    def __new__(self):
        if not self._instance:
            self._instance = super(My_singleton,self).__new__(self)
        return self._instance    
    

x = My_singleton()  
y = My_singleton()  

######################
def singleton(myclass):
    instance = {}
    def getinstance(*args,**kwargs):
        if myclass not in instance:
            instance[myclass]= myclass(*args,**kwargs)
        return instance[myclass]
    return getinstance
  
@singleton
class testclass:
    pass

x = testclass()
